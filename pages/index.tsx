import type { NextPage } from 'next'
import Head from 'next/head'
import { FormEventHandler, useCallback, useEffect, useRef, useState } from 'react'
import styles from '../styles/Home.module.css'

const Home: NextPage = () => {
  const [isSequence, setIsSequence] = useState(false)
  const [data, setData] = useState({secrets: [], totalTime: 0, averageTime: 0, medianTime: 0, error: null})
  const [isLoading, setIsLoading] = useState(false)

  const toggleIsSequence = () => setIsSequence(prev => !prev)

  const tokenRef = useRef<HTMLInputElement>(null)
  const apisRef = useRef<HTMLInputElement>(null)
  const counterRef = useRef<HTMLInputElement>(null)

  const showSecrets: FormEventHandler<HTMLFormElement> = event => {
    event.preventDefault()
    setIsLoading(true)

    fetch('api/zero-secrets', {method: "POST", body: JSON.stringify({
      token: tokenRef.current?.value ?? '',
      apis: apisRef.current?.value.split(',').map(api => api.trim()) ?? [],
      counter: counterRef.current?.value ?? 0,
      sequence: isSequence,
    }, undefined, 2)})
      .then(response => response.json())
      .then(result => setData(result))
      .catch(console.error)
      .finally(() => setIsLoading(false))
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <form style={{display: 'grid', rowGap: '10px'}} onSubmit={showSecrets}>
          <label>
            Sequence:
            <input onClick={toggleIsSequence} value={isSequence ? 'on': 'off'} type="checkbox" />
          </label>

          <label>
            Token:
            <input ref={tokenRef} type="text" name="token" />
          </label>

          <label>
            Pick:
            <input ref={apisRef} type="text" name="apis" />
          </label>

          <label>
            Times:
            <input ref={counterRef} type="number" name="counter" />
          </label>

          <button type="submit">show secrets</button>
        </form>


        {isLoading && 'Loading...'}

        {data.error && !isLoading && <div style={{margin: '20px', maxWidth: "80%", backgroundColor: "#999", color: "#fff", overflow: 'auto'}}>
          <pre>{data.error}</pre>
        </div>}

        {!isLoading && <>
          <ul style={{maxHeight: '500px', overflow: 'auto'}}>
            {data.secrets.map(({name, value}, index) => <li key={index}>{index + 1}. {name}: {value}</li>)}
          </ul>

          <div>
            {Boolean(data.totalTime) && <small>total: {data.totalTime} ms</small>}
            <br />
            {Boolean(data.averageTime) && <small>average: {data.averageTime} ms</small>}
            <br />
            {Boolean(data.medianTime) && <small>median: {data.medianTime} ms</small>}
          </div>
        </>}
      </main>
    </div>
  )
}

export default Home
